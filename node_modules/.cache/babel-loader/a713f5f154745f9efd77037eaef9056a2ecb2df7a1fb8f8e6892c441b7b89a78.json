{"ast":null,"code":"var _jsxFileName = \"/Users/owenboseley/Documents/GitHub/NULLtm.github.io/src/YearsCounter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './YearsCounter.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst YearsCounter = ({\n  startDate\n}) => {\n  _s();\n  // Function to calculate precise years\n  const calculatePreciseYears = start => {\n    const now = new Date();\n    const startDate = new Date(start);\n    return (now.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24 * 365);\n  };\n  const [years, setYears] = useState(calculatePreciseYears(startDate));\n  useEffect(() => {\n    const updateYears = () => {\n      setYears(calculatePreciseYears(startDate));\n    };\n\n    // Update every day (in milliseconds)\n    const interval = setInterval(updateYears, 1);\n\n    // Clear interval on component unmount\n    return () => clearInterval(interval);\n  }, [startDate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: years.toFixed(8)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"years old\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true);\n};\n_s(YearsCounter, \"jh1VKPHBLa8Qc6WEKqL34b8JOAg=\");\n_c = YearsCounter;\nexport default YearsCounter;\nvar _c;\n$RefreshReg$(_c, \"YearsCounter\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","YearsCounter","startDate","_s","calculatePreciseYears","start","now","Date","getTime","years","setYears","updateYears","interval","setInterval","clearInterval","children","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/owenboseley/Documents/GitHub/NULLtm.github.io/src/YearsCounter.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './YearsCounter.css';\n\nconst YearsCounter = ({ startDate }) => {\n  // Function to calculate precise years\n  const calculatePreciseYears = (start) => {\n    const now = new Date();\n    const startDate = new Date(start);\n\n    return (now.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24 * 365)\n  };\n\n  const [years, setYears] = useState(calculatePreciseYears(startDate));\n\n  useEffect(() => {\n    const updateYears = () => {\n      setYears(calculatePreciseYears(startDate));\n    };\n\n    // Update every day (in milliseconds)\n    const interval = setInterval(updateYears, 1);\n\n    // Clear interval on component unmount\n    return () => clearInterval(interval);\n  }, [startDate]);\n\n  return (\n    <>\n      <p>{years.toFixed(8)}</p><span>years old</span>\n    </>\n  );\n};\n\nexport default YearsCounter;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACtC;EACA,MAAMC,qBAAqB,GAAIC,KAAK,IAAK;IACvC,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,MAAML,SAAS,GAAG,IAAIK,IAAI,CAACF,KAAK,CAAC;IAEjC,OAAO,CAACC,GAAG,CAACE,OAAO,CAAC,CAAC,GAAGN,SAAS,CAACM,OAAO,CAAC,CAAC,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC;EAC5E,CAAC;EAED,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAACS,qBAAqB,CAACF,SAAS,CAAC,CAAC;EAEpEN,SAAS,CAAC,MAAM;IACd,MAAMe,WAAW,GAAGA,CAAA,KAAM;MACxBD,QAAQ,CAACN,qBAAqB,CAACF,SAAS,CAAC,CAAC;IAC5C,CAAC;;IAED;IACA,MAAMU,QAAQ,GAAGC,WAAW,CAACF,WAAW,EAAE,CAAC,CAAC;;IAE5C;IACA,OAAO,MAAMG,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACV,SAAS,CAAC,CAAC;EAEf,oBACEJ,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAIN,KAAK,CAACO,OAAO,CAAC,CAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAAAtB,OAAA;MAAAiB,QAAA,EAAM;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,eAC/C,CAAC;AAEP,CAAC;AAACjB,EAAA,CA5BIF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AA8BlB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}